//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VehicleEntities : DbContext
    {
        public VehicleEntities()
            : base("name=VehicleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int sp_add(string plate, string name, string description, string type, Nullable<int> typeId)
        {
            var plateParameter = plate != null ?
                new ObjectParameter("plate", plate) :
                new ObjectParameter("plate", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add", plateParameter, nameParameter, descriptionParameter, typeParameter, typeIdParameter);
        }
    
        public virtual int sp_del(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_del", idParameter);
        }
    
        public virtual int sp_update(Nullable<int> id, string plate, string name, string description, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var plateParameter = plate != null ?
                new ObjectParameter("plate", plate) :
                new ObjectParameter("plate", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update", idParameter, plateParameter, nameParameter, descriptionParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_vehicleData_Result> sp_vehicleData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_vehicleData_Result>("sp_vehicleData");
        }
    
        public virtual ObjectResult<sp_vehicleTypeData_Result> sp_vehicleTypeData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_vehicleTypeData_Result>("sp_vehicleTypeData");
        }
    }
}
