//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.Website.ServiceAccess.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVehiclesByCondition", ReplyAction="http://tempuri.org/IService/GetVehiclesByConditionResponse")]
        Project.Contract.SearchReturn GetVehiclesByCondition(Project.Contract.SearchReturn condition, System.Data.SqlClient.SortOrder sortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVehiclesByCondition", ReplyAction="http://tempuri.org/IService/GetVehiclesByConditionResponse")]
        System.Threading.Tasks.Task<Project.Contract.SearchReturn> GetVehiclesByConditionAsync(Project.Contract.SearchReturn condition, System.Data.SqlClient.SortOrder sortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Create", ReplyAction="http://tempuri.org/IService/CreateResponse")]
        void Create(Project.Entities.Vehicle vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Create", ReplyAction="http://tempuri.org/IService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(Project.Entities.Vehicle vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Update", ReplyAction="http://tempuri.org/IService/UpdateResponse")]
        void Update(Project.Entities.Vehicle vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Update", ReplyAction="http://tempuri.org/IService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(Project.Entities.Vehicle vehicle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Delete", ReplyAction="http://tempuri.org/IService/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Delete", ReplyAction="http://tempuri.org/IService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVehicleTypes", ReplyAction="http://tempuri.org/IService/GetVehicleTypesResponse")]
        System.Collections.ObjectModel.ObservableCollection<Project.Entities.VehicleType> GetVehicleTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVehicleTypes", ReplyAction="http://tempuri.org/IService/GetVehicleTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Project.Entities.VehicleType>> GetVehicleTypesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Project.Website.ServiceAccess.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Project.Website.ServiceAccess.ServiceReference.IService>, Project.Website.ServiceAccess.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Project.Contract.SearchReturn GetVehiclesByCondition(Project.Contract.SearchReturn condition, System.Data.SqlClient.SortOrder sortOrder) {
            return base.Channel.GetVehiclesByCondition(condition, sortOrder);
        }
        
        public System.Threading.Tasks.Task<Project.Contract.SearchReturn> GetVehiclesByConditionAsync(Project.Contract.SearchReturn condition, System.Data.SqlClient.SortOrder sortOrder) {
            return base.Channel.GetVehiclesByConditionAsync(condition, sortOrder);
        }
        
        public void Create(Project.Entities.Vehicle vehicle) {
            base.Channel.Create(vehicle);
        }
        
        public System.Threading.Tasks.Task CreateAsync(Project.Entities.Vehicle vehicle) {
            return base.Channel.CreateAsync(vehicle);
        }
        
        public void Update(Project.Entities.Vehicle vehicle) {
            base.Channel.Update(vehicle);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(Project.Entities.Vehicle vehicle) {
            return base.Channel.UpdateAsync(vehicle);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Project.Entities.VehicleType> GetVehicleTypes() {
            return base.Channel.GetVehicleTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Project.Entities.VehicleType>> GetVehicleTypesAsync() {
            return base.Channel.GetVehicleTypesAsync();
        }
    }
}
